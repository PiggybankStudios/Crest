// raddbg 0.9.21 project file

recent_file: path: "core/gfx/gfx_system.h"
recent_file: path: "core/third_party/sokol/sokol_gfx.h"
recent_file: path: "core/gfx/gfx_clay_renderer.h"
recent_file: path: "app/app_main.c"
recent_file: path: "app/platform_main.c"
recent_file: path: "core/struct/struct_typed_array.h"
recent_file: path: "core/os/os_http.h"
recent_file: path: "core/struct/struct_ranges.h"
recent_file: path: "core/struct/struct_rich_string.h"
recent_file: path: "core/ui/ui_clay_hover_info_icon.h"
recent_file: path: "core/third_party/clay/clay_private_api.c"
recent_file: path: "core/cross/cross_rich_string_scratch_and_ranges.h"
recent_file: path: "core/struct/struct_string.h"
recent_file: path: "core/ui/ui_clay_textbox.h"
recent_file: path: "core/misc/misc_web.h"
recent_file: path: "core/cross/cross_mem_arena_string_and_unicode.h"
recent_file: path: "core/cross/cross_string_and_ranges.h"
recent_file: path: "core/gfx/gfx_font_flow.h"
recent_file: path: "core/mem/mem_arena.h"
recent_file: path: "core/third_party/handmade_math/handmademath.h"
recent_file: path: "core/struct/struct_var_array.h"
recent_file: path: "core/os/os_threading.h"
recent_file: path: "core/std/std_basic_math.h"
recent_file: path: "core/third_party/clay/clay_arrays.c"
recent_file: path: "core/third_party/clay/clay_public_api.c"
recent_file: path: "../COSM/app/app_main.c"
recent_file: path: "core/ui/ui_clay_listview.h"
recent_file: path: "core/misc/misc_printing.h"
recent_file: path: "../COSM/app./app_main.c"
recent_file: path: "core/gfx/gfx_font.h"
recent_file: path: "app/app_helpers.c"
recent_file: path: "app./app_helpers.c"
target:
{
  executable: "_build/crest.exe"
  working_directory: _data
  enabled: 1
}
type_view:
{
  type: Str8
  expr: "rows($, array($.chars, $.length), $.length)"
}
type_view:
{
  { HMM_Vec2 }
  type: HMM_Vec2
  expr: "rows($, $.X, $.Y)"
}
type_view:
{
  type: HMM_Vec3
  expr: "rows($, $.X, $.Y, $.Z)"
}
type_view:
{
  type: HMM_Vec4
  expr: "rows($, $.X, $.Y, $.Z, $.W)"
}
type_view:
{
  type: Vec4Raw
  expr: "rows($, $.X, $.Y, $.Z, $.W)"
}
type_view:
{
  type: Vec2i
  expr: "rows($, $.X, $.Y)"
}
type_view:
{
  type: Vec3i
  expr: "rows($, $.X, $.Y, $.Z)"
}
type_view:
{
  type: Vec4i
  expr: "rows($, $.X, $.Y, $.Z, $.W)"
}
type_view:
{
  type: Vec2R64
  expr: "rows($, $.X, $.Y)"
}
type_view:
{
  type: Vec3R64
  expr: "rows($, $.X, $.Y, $.Z)"
}
type_view:
{
  type: Vec4R64
  expr: "rows($, $.X, $.Y, $.Z, $.W)"
}
type_view:
{
  type: Color32
  expr: "rows($, color((($.valueU32&0x00FFFFFF) << 8) | (($.valueU32&0xFF000000)>>24)), hex(r), hex(g), hex(b), hex(a))"
}
theme: Naysayer
watch_pin:
{
  expression: "state.font"
  source_location: "core/gfx/gfx_font_flow.h:263:1"
}
type_view:
{
  type: RangeUXX
  expr: "rows($, $.min, $.max)"
}
type_view:
{
  type: RangeIXX
  expr: "rows($, $.min, $.max)"
}
type_view:
{
  type: RangeR32
  expr: "rows($, $.min, $.max)"
}
type_view:
{
  type: NewRangeR64
  expr: "rows($, $.min, $.max)"
}
type_view:
{
  type: Str16
  expr: "rows($, array($.chars, $.length), $.length)"
}
type_view:
{
  type: Rectanglef
  expr: "rows($, $.X, $.Y, $.Width, $.Height)"
}
